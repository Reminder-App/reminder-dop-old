delta dDateRepeat {
    modifies br.unb.cic.reminders.model.db.DefaultReminderDAO {
        removes createReminderCursor(Cursor cursor);
        adds private Reminder createReminderCursor(Cursor cursor) throws DBException {
            Reminder reminder = new Reminder();
            int monday = cursor.getInt(cursor.getColumnIndex(DBConstants.REMINDER_MONDAY_COLUMN));
            int tuesday = cursor.getInt(cursor.getColumnIndex(DBConstants.REMINDER_TUESDAY_COLUMN));
            int wednesday = cursor.getInt(cursor.getColumnIndex(DBConstants.REMINDER_WEDNESDAY_COLUMN));
            int thursday = cursor.getInt(cursor.getColumnIndex(DBConstants.REMINDER_THURSDAY_COLUMN));
            int friday = cursor.getInt(cursor.getColumnIndex(DBConstants.REMINDER_FRIDAY_COLUMN));
            int saturday = cursor.getInt(cursor.getColumnIndex(DBConstants.REMINDER_SATURDAY_COLUMN));
            int sunday = cursor.getInt(cursor.getColumnIndex(DBConstants.REMINDER_SUNDAY_COLUMN));
            String hour = cursor.getString(cursor.getColumnIndex(DBConstants.REMINDER_HOUR_COLUMN));
            reminder.setMonday(monday);
            reminder.setTuesday(tuesday);
            reminder.setWednesday(wednesday);
            reminder.setThursday(thursday);
            reminder.setFriday(friday);
            reminder.setSaturday(saturday);
            reminder.setSunday(sunday);
            reminder.setHour(hour);
            return reminder;
        }
    }
    removes br.unb.cic.reminders.view.DatePickerDialogFragment;
    modifies br.unb.cic.reminders.view.ReminderAddActivity {
        adds import android.widget.CheckBox;
        adds private CheckBox cbMonday, cbTuesday, cbWednesday, cbThursday,
			cbFriday, cbSaturday, cbSunday;
        removes createReminderAux();
        adds private Reminder createReminderAux() {
            Reminder reminder = new Reminder();
            reminder.setMonday(cbMonday.isChecked());
			reminder.setTuesday(cbTuesday.isChecked());
			reminder.setWednesday(cbWednesday.isChecked());
			reminder.setThursday(cbThursday.isChecked());
			reminder.setFriday(cbFriday.isChecked());
			reminder.setSaturday(cbSaturday.isChecked());
			reminder.setSunday(cbSunday.isChecked());
            reminder.setHour(edtHour.getText().toString());
            return reminder;
        }
        removes createReminderExisting(Intent intent);
        adds private Reminder createReminderExisting(Intent intent) {
            Reminder reminder = new Reminder();
            boolean monday = intent.getBooleanExtra("monday", false);
			boolean tuesday = intent.getBooleanExtra("tuesday", false);
			boolean wednesday = intent.getBooleanExtra("wednesday", false);
			boolean thursday = intent.getBooleanExtra("thursday", false);
			boolean friday = intent.getBooleanExtra("friday", false);
			boolean saturday = intent.getBooleanExtra("saturday", false);
			boolean sunday = intent.getBooleanExtra("sunday", false);
            String hour = intent.getStringExtra("hour");
            reminder.setMonday(monday);
			reminder.setTuesday(tuesday);
			reminder.setWednesday(wednesday);
			reminder.setThursday(thursday);
			reminder.setFriday(friday);
			reminder.setSaturday(saturday);
			reminder.setSunday(sunday);
            reminder.setHour(hour);
            return reminder;
        }
        removes createReminderIntent(Intent intent);
        adds private Reminder createReminderIntent(Intent intent) {
            Reminder reminder = new Reminder();
            boolean monday = intent.getBooleanExtra("monday", false);
            boolean tuesday = intent.getBooleanExtra("tuesday", false);
            boolean wednesday = intent.getBooleanExtra("wednesday", false);
            boolean thursday = intent.getBooleanExtra("thursday", false);
            boolean friday = intent.getBooleanExtra("friday", false);
            boolean saturday = intent.getBooleanExtra("saturday", false);
            boolean sunday = intent.getBooleanExtra("sunday", false);
            String hour = intent.getStringExtra("hour");
            reminder.setMonday(monday);
            reminder.setTuesday(tuesday);
            reminder.setWednesday(wednesday);
            reminder.setThursday(thursday);
            reminder.setFriday(friday);
            reminder.setSaturday(saturday);
            reminder.setSunday(sunday);
            reminder.setHour(hour);
            return reminder;
        }
        removes updateFieldsFromReminder(Reminder reminder);
        adds private void updateFieldsFromReminder(Reminder reminder) throws Exception {
            edtReminder.setText(reminder.getText());
            edtDetails.setText(reminder.getDetails());
            cbMonday.setChecked(reminder.isMonday());
            cbTuesday.setChecked(reminder.isTuesday());
            cbWednesday.setChecked(reminder.isWednesday());
            cbThursday.setChecked(reminder.isThursday());
            cbFriday.setChecked(reminder.isFriday());
            cbSaturday.setChecked(reminder.isSaturday());
            cbSunday.setChecked(reminder.isSunday());
            edtHour.setText(reminder.getHour());
        }
    }
}