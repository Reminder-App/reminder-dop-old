delta dManageCategoryPriority {
	modifies br.unb.cic.reminders.model.db.DBConstants {
		removes CREATE_TABLE_STATEMENTS;
		adds public static String CREATE_TABLE_STATEMENTS[] = { "CREATE TABLE CATEGORY("
			+ "PK INTEGER PRIMARY KEY AUTOINCREMENT, " + "NAME VARCHAR(50) NOT NULL, " + "LOCKED INT NOT NULL);",

			"CREATE TABLE REMINDER ( " + "PK INTEGER PRIMARY KEY AUTOINCREMENT, " + "TEXT VARCHAR(50) NOT NULL,"
					+ "DETAILS VARCHAR(50) NULL,"
					+ "FK_CATEGORY INTEGER NOT NULL REFERENCES CATEGORY ON DELETE CASCADE," + "DATE CHAR(10) NULL,"
					+ "HOUR CHAR(5) NULL," + "PRIORITY INTEGER NOT NULL," + "DONE INTEGER NOT NULL);", };
		removes SELECT_REMINDERS;
		adds public static final String SELECT_REMINDERS = "SELECT PK, TEXT, DETAILS, FK_CATEGORY, DATE, HOUR, PRIORITY, DONE FROM REMINDER";
		removes SELECT_REMINDERS_BY_CATEGORY;
		adds public static final String SELECT_REMINDERS_BY_CATEGORY = "SELECT PK, TEXT, DETAILS, FK_CATEGORY, DATE, HOUR, PRIORITY, DONE FROM REMINDER " 
			+ "WHERE FK_CATEGORY = ?";
	}
	modifies br.unb.cic.reminders.view.FilterListFragment {
		adds import br.unb.cic.reminders.controller.PriorityFilter;
		adds import br.unb.cic.reminders.model.Priority;
		modifies listOfFilters() {
			List<ReminderFilter> filters = original();
			// Add the priorities to the filter list
			PriorityFilter highPriorityFilter = new PriorityFilter(Priority.HIGH, getActivity());
			filters.add(highPriorityFilter);
			PriorityFilter normalPriorityFilter = new PriorityFilter(Priority.NORMAL, getActivity());
			filters.add(normalPriorityFilter);
			PriorityFilter lowPriorityFilter = new PriorityFilter(Priority.LOW, getActivity());
			filters.add(lowPriorityFilter);
			return filters;
		}
	}
}
