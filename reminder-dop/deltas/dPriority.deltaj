delta dPriority {
	modifies br.unb.cic.reminders.view.ReminderFilterArrayAdapter {
		removes ReminderFilterArrayAdapter(Context context, List<ReminderFilter> objects);
		adds public ReminderFilterArrayAdapter(Context context, List<ReminderFilter> objects) {
			super(context, R.layout.category_row, objects);
		}
		removes getView(int position, View convertView, ViewGroup parent);
		adds @Override public View getView(int position, View convertView, ViewGroup parent) {
			LinearLayout filterRow;
	
			// Inflate the view
			if (convertView == null) {
				filterRow = new LinearLayout(getContext());
				String inflater = Context.LAYOUT_INFLATER_SERVICE;
				LayoutInflater vi;
				vi = (LayoutInflater) getContext().getSystemService(inflater);
				vi.inflate(R.layout.category_row, filterRow, true);
			} else {
				filterRow = (LinearLayout) convertView;
			}
	
			TextView tvFilter = (TextView) filterRow.findViewById(R.id.row_categoryName);
			tvFilter.setText(getItem(position).getName());
	
			TextView tvNumReminders = (TextView) filterRow.findViewById(R.id.row_categoryCounter);
			tvNumReminders.setText(Integer.toString(getItem(position).getNumReminders()));
	
			return filterRow;
		}
	}
	modifies br.unb.cic.reminders.ReminderMainActivity {
		adds import br.unb.cic.reminders.view.FilterListFragment;
		removes createUI();
		adds private void createUI() {
			FragmentTransaction ft = getFragmentManager().beginTransaction();
			ReminderListFragment listReminderFragment = new ReminderListFragment();
			FilterListFragment listCategoryFragment = new FilterListFragment();
			listCategoryFragment.addListener(listReminderFragment);
			ft.add(R.id.listReminders, listReminderFragment);
			ft.add(R.id.listCategories, listCategoryFragment);
			ft.commit();
		}
	}
}